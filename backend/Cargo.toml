[package]
name = "backend"
version = "0.2.0"
edition = "2021"


[[bin]]
name = "server"
path = "src/bin/server.rs"


[dependencies]

common_model = { path = "../common_model" }

axum = { version = "0.6.1", features = [ "headers", "macros", "json" ] }
axum-macros = "0.3.0"
axum-extra = { version = "0.4.2", features = ["spa"] }

chrono = { version = "0.4.23", features = [ "serde" ] }
clap = { version = "3.2.17", features = ["derive"] }
config = { version = "0.13.3", default-features = false, features = ["yaml"] }
fastrand = "1.8.0"
jsonwebtoken = "8.2.0"
log = "0.4.17"
md5 = "0.7.0"
secrecy = { version = "0.8.0", features = [ "serde" ]}

serde = { version = "1.0.152", features = [ "derive" ] }
serde_json = "1.0.91"

slug = "0.1.4"
thiserror = "1.0.38"       # provides a derive implementation which adds the Error trait for us.
tokio = { version = "1.23.0", features = ["full"] }
tower = "0.4.13"
tower-http = { version = "0.3.5", features = ["full"] }
tracing = "0.1.37"
tracing-subscriber = "0.3.16"
uuid = { version = "1.2.2", features = [ "serde", "v4" ] }


[dependencies.sqlx]
version = "0.7.2"
default-features = false
features = [
    "chrono",               # Have a Postgres data type be convertible to `DateTime<Utc>`.
    "macros",               # Have access to `sqlx::query!` and `sqlx::query_as!` macros.
    "migrate",              # Ability to programmatically manage database migrations.
    "postgres",             # Use PostgreSQL specific features (such as non-standard SQL type).
    "runtime-tokio-rustls", # Use Tokio runtime for its futures and rustls as TLS backend.
    "uuid"                  # Add support for mapping SQL UUID to Uuid type from `uuid` create.
]
